name: Export App

on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  export:
    name: Export on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      CI: true
      working-directory: ./SeeProfiler
      artifact-name: SeeProfiler

    strategy:
      matrix:
        node-version: [12.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install, Build and Test
      run: |
        npm install
        npm test --if-present
      working-directory: ${{env.working-directory}}
    - name: Export App
      run: npm run export
      working-directory: ${{env.working-directory}}
    - name: Generate Artifact 1
      if: runner.os == 'Windows'
      run: Compress-Archive -Path ./Export/* -DestinationPath ${{env.artifact-name}}.zip
    - name: Generate Artifact 2
      if: runner.os != 'Windows'
      run: zip -r ${{env.artifact-name}} Export/*
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
        asset_path: ./${{env.artifact-name}}.zip
        asset_name: ${{env.artifact-name}}-${{ runner.os }}.zip
        asset_content_type: application/zip

